buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath 'org.springframework:springloaded:1.2.1.RELEASE'
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea' 
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'hatshop'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    reverseMap
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.codehaus.groovy:groovy"
    compile "com.allanditzel:spring-security-csrf-token-filter:1.1"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.4.5"
    compile "commons-beanutils:commons-beanutils:1.6"

    runtime "com.h2database:h2"
    runtime 'org.postgresql:postgresql:9.3-1103-jdbc41'

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile 'com.jayway.jsonpath:json-path:2.0.0'

    reverseMap 'org.hibernate:hibernate-tools:4.3.1.CR1'
    reverseMap 'org.hibernate:hibernate-entitymanager:4.3.7.Final'
    reverseMap 'org.slf4j:slf4j-simple:1.7.5'
    reverseMap 'org.postgresql:postgresql:9.3-1103-jdbc41'
    reverseMap files('.')
}

project.ext {
    hibernateRevEngXml = "$projectDir/config/hibernate.reveng.xml"
    hibernateDestDir = file("$buildDir/generated")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

task reverseMap {
    inputs.files hibernateRevEngXml
    outputs.dir hibernateDestDir
    doLast {
        hibernateDestDir.exists() || hibernateDestDir.mkdirs()
        ant {
            taskdef(name: 'hibernatetool',
                    classname: 'org.hibernate.tool.ant.HibernateToolTask',
                    classpath: configurations.reverseMap.asPath )
            hibernatetool( destdir : hibernateDestDir ) {
                jdbcconfiguration(
                        configurationfile:"$projectDir/config/hibernate.cfg.xml",
                        revengfile:hibernateRevEngXml,
                        packagename:
                                "com.mybiz"
                        //reversestrategy="ReverseEngineeringStrategy classname"
                        //detectmanytomany="true|false"
                        //detectoptmisticlock="true|false"
                )
                hbmtemplate(
                    templateprefix:"pojo/" ,
                    template:"pojo/Pojo.ftl", 
                    filepattern:"{package-name}/{class-name}.java"
                ) {
                    property(key:"jdk5", value:"true")
                    property(key:"ejb3", value:"true")
                }
                /*
                hbm2java(
                        jdk5: true,
                        ejb3: true
                )
                */
                // Adds the config directory to the path so that log4j can pick up
                // its properties file.
                classpath {
                    pathelement( path: "config" )
                }
            }
        }
    }
}